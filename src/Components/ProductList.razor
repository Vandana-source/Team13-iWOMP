@using ContosoCrafts.WebSite.Models
@using ContosoCrafts.WebSite.Services
@using Microsoft.AspNetCore.Components.Web
@inject JsonFileProductService ProductService

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<div class="card-columns">
    @foreach (var product in Products)
    {
        <div class="card">
            <div class="card-img" style="background-image: url('@product.Image');"></div>
            <div class="card-body">
                <h5 class="card-title">@product.Title</h5>
                <h7>Neighborhood: </h7>
                <h7 class="card-title">@product.Neighborhood</h7>
                <p class="card-text">@product.LocationType</p>
            </div>
            <div class="card-footer">
                <small class="text-muted">
                    <!-- Updated data-target to point to a unique modal ID based on the product ID -->
                    <button data-toggle="modal" data-target="#productModal-@product.Id" class="btn btn-primary">
                        More Info
                    </button>
                </small>
            </div>
        </div>

        <!-- Unique modal for each product -->
        <div class="modal fade" id="productModal-@product.Id" tabindex="-1" role="dialog" aria-labelledby="productTitle-@product.Id" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="productTitle-@product.Id">@product.Title</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="card">
                            <div class="card-img" style="background-image: url('@product.Image');"></div>
                            <div class="card-body">
                                <p class="card-text">@product.Description</p>
                                <!-- Button to toggle the map -->
                                <div class="d-flex align-items-center justify-content-between map-toggler"
                                     data-toggle="collapse"
                                     data-target="#mapCollapse-@product.Id"
                                     aria-expanded="false"
                                     aria-controls="mapCollapse-@product.Id">
                                    <span>Show Map</span>
                                    <i class="fas fa-chevron-down"></i>
                                    <i class="fas fa-chevron-up d-none"></i>
                                </div>
                                <!-- The Map wrapped inside a collapsible div -->
                                <div class="collapse" id="mapCollapse-@product.Id">
                                    <iframe src="@product.MapURL" allowfullscreen></iframe>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        @if (product.Ratings == null || !product.Ratings.Any())
                        {
                            <span>Be the first to vote!</span>
                        }
                        else
                        {
                            <span>@product.Ratings.Count() @(product.Ratings.Count() == 1 ? "Vote" : "Votes")</span>
                        }
                        <!-- Updated the for loop to use product ID -->
                        @for (int i = 1; i <= 5; i++)
                        {
                            var currentStar = i;
                            <span class="fa fa-star @(product.Ratings != null && i <= product.Ratings.Average() ? "checked" : "")" @onclick="(e => SubmitRating(product.Id, currentStar))"></span>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@code {
    [Parameter]
    public IEnumerable<ProductModel> Products { get; set; }

    void SubmitRating(string productId, int rating)
    {
        System.Console.WriteLine($"Rating received for product {productId}: {rating}");
        ProductService.AddRating(productId, rating);

        // After adding rating, you might want to refresh the product's details
        // You would need to implement logic to refresh product details if necessary
    }
}