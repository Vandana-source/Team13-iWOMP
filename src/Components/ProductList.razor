@using ContosoCrafts.WebSite.Models
@using ContosoCrafts.WebSite.Services
@using Microsoft.AspNetCore.Components.Web
@inject JsonFileProductService ProductService

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<div id="neighborhoodDropdown" style="position: sticky; top: 0; background-color: white; z-index: 1; 
                                      display: flex; padding-bottom: 2vw;">
    <div style="margin-right: 1vw;">
        <select @onchange="OnNeighborhoodChanged">
            <option value="">Neighborhood</option>
            @foreach (var neighborhood in Neighborhoods)
            {
                <option value="@neighborhood">@neighborhood</option>
            }
        </select>
    </div>
    <div>
        <select @onchange="OnLocationTypeChanged">
            <option value="">Location Type</option>
            
            <option value="Bench">Bench</option>
            <option value="Restroom">Restroom</option>
            <option value="Table">Table</option>
            <option value="Other">Other</option>
        </select>
    </div>
</div>


<div class="card-columns">
    @foreach (var product in FilteredProducts)
    {
        <div class="card">
            <div class="card-img" style="background-image: url('@product.Image');"></div>
            <div class="card-body">
                <h5 class="card-title">@product.Title</h5>
                <h7>Neighborhood: </h7>
                <h7 class="card-title">@product.Neighborhood</h7>
                <p class="card-text">@product.LocationType</p>
            </div>
            <div class="card-footer">
                <small class="text-muted">
                    <!-- Updated data-target to point to a unique modal ID based on the product ID -->
                    <button data-toggle="modal" data-target="#productModal-@product.Id" class="btn btn-primary">
                        More Info
                    </button>
                </small>
            </div>
        </div>

        <!-- Unique modal for each product -->
        <div class="modal fade" id="productModal-@product.Id" tabindex="-1" role="dialog" aria-labelledby="productTitle-@product.Id" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="productTitle-@product.Id">@product.Title</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="card">
                            <div class="card-img" style="background-image: url('@product.Image');"></div>
                            <div class="card-body">
                                <p class="card-text">@product.Description</p>
                                <!-- Button to toggle the map -->
                                <div class="d-flex align-items-center justify-content-between map-toggler"
                                     data-toggle="collapse"
                                     data-target="#mapCollapse-@product.Id"
                                     aria-expanded="false"
                                     aria-controls="mapCollapse-@product.Id">
                                    <span>Show Map</span>
                                    <i class="fas fa-chevron-down"></i>
                                    <i class="fas fa-chevron-up d-none"></i>
                                </div>
                                <!-- The Map wrapped inside a collapsible div -->
                                <div class="collapse" id="mapCollapse-@product.Id">
                                    <iframe src="@product.MapURL" allowfullscreen></iframe>
                                </div>
                            </div>
                        </div>
                        <br />
                        <br />
                        <span>     Share : </span>
                        <!-- Sharingbutton Facebook -->
                        @{
                            string fblink = "https://facebook.com/sharer/sharer.php?u=https%3A%2F%2Ftakeabreak.azurewebsites.net%2FProduct%2FRead%2F" + product.Id;
                        }
                        <a class="resp-sharing-button__link" href=@fblink target="_blank" rel="noopener" aria-label="Facebook">
                            <div class="resp-sharing-button resp-sharing-button--facebook resp-sharing-button--medium">
                                <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solidcircle">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 0C5.38 0 0 5.38 0 12s5.38 12 12 12 12-5.38 12-12S18.62 0 12 0zm3.6 11.5h-2.1v7h-3v-7h-2v-2h2V8.34c0-1.1.35-2.82 2.65-2.82h2.35v2.3h-1.4c-.25 0-.6.13-.6.66V9.5h2.34l-.24 2z" /></svg>
                                </div>Facebook
                            </div>
                        </a>

                        <!-- Sharingbutton Twitter -->
                        @{
                            string tlink = "https://twitter.com/share?text=Look%2C%20I%20found%20a%20good%20place%20to%20rest%20and%20Take%20a%20Break!!%20Check%20it%20out.&amp&url=https%3A%2F%2Ftakeabreak.azurewebsites.net%2FProduct%2FRead%2F" + product.Id;
                        }
                        <a class="resp-sharing-button__link" href="@tlink" target="_blank" rel="noopener" aria-label="Twitter">
                            <div class="resp-sharing-button resp-sharing-button--twitter resp-sharing-button--medium">
                                <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solidcircle">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 0C5.38 0 0 5.38 0 12s5.38 12 12 12 12-5.38 12-12S18.62 0 12 0zm5.26 9.38v.34c0 3.48-2.64 7.5-7.48 7.5-1.48 0-2.87-.44-4.03-1.2 1.37.17 2.77-.2 3.9-1.08-1.16-.02-2.13-.78-2.46-1.83.38.1.8.07 1.17-.03-1.2-.24-2.1-1.3-2.1-2.58v-.05c.35.2.75.32 1.18.33-.7-.47-1.17-1.28-1.17-2.2 0-.47.13-.92.36-1.3C7.94 8.85 9.88 9.9 12.06 10c-.04-.2-.06-.4-.06-.6 0-1.46 1.18-2.63 2.63-2.63.76 0 1.44.3 1.92.82.6-.12 1.95-.27 1.95-.27-.35.53-.72 1.66-1.24 2.04z" /></svg>
                                </div>Twitter
                            </div>
                        </a>

                        <!-- Sharingbutton E-Mail -->
                        @{
                            string elink = "mailto:?subject=Look%2C%20I%20found%20a%20good%20place%20to%20rest%20and%20Take%20a%20Break!!%20Check%20it%20out.&amp&body=https%3A%2F%2Ftakeabreak.azurewebsites.net%2FProduct%2FRead%2F" + product.Id;
                        }
                        <a class="resp-sharing-button__link" href="@elink" target="_self" rel="noopener" aria-label="E-Mail">
                            <div class="resp-sharing-button resp-sharing-button--email resp-sharing-button--medium">
                                <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solidcircle">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 0C5.38 0 0 5.38 0 12s5.38 12 12 12 12-5.38 12-12S18.62 0 12 0zm8 16c0 1.1-.9 2-2 2H6c-1.1 0-2-.9-2-2V8c0-1.1.9-2 2-2h12c1.1 0 2 .9 2 2v8z" /><path d="M17.9 8.18c-.2-.2-.5-.24-.72-.07L12 12.38 6.82 8.1c-.22-.16-.53-.13-.7.08s-.15.53.06.7l3.62 2.97-3.57 2.23c-.23.14-.3.45-.15.7.1.14.25.22.42.22.1 0 .18-.02.27-.08l3.85-2.4 1.06.87c.1.04.2.1.32.1s.23-.06.32-.1l1.06-.9 3.86 2.4c.08.06.17.1.26.1.17 0 .33-.1.42-.25.15-.24.08-.55-.15-.7l-3.57-2.22 3.62-2.96c.2-.2.24-.5.07-.72z" /></svg>
                                </div>E-Mail
                            </div>
                        </a>

                        <!-- Sharingbutton Pinterest -->
                        @{
                            string plink = "https%3A%2F%2Ftakeabreak.azurewebsites.net%2FProduct%2FRead%2F" + product.Id + "&amp";
                        }
                        <a class="resp-sharing-button__link" href="https://pinterest.com/pin/create/button/?url=https%3A%2F%2Ftakeabreak.azurewebsites.net%2FProduct%2FRead%2Fabc&amp;media=@plink;description=Look%2C%20I%20found%20a%20good%20place%20to%20rest%20and%20Take%20a%20Break!!%20Check%20it%20out." target="_blank" rel="noopener" aria-label="Pinterest">
                            <div class="resp-sharing-button resp-sharing-button--pinterest resp-sharing-button--medium">
                                <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solidcircle">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 0C5.38 0 0 5.38 0 12s5.38 12 12 12 12-5.38 12-12S18.62 0 12 0zm1.4 15.56c-1 0-1.94-.53-2.25-1.14l-.65 2.52c-.4 1.45-1.57 2.9-1.66 3-.06.1-.2.07-.22-.04-.02-.2-.32-2 .03-3.5l1.18-5s-.3-.6-.3-1.46c0-1.36.8-2.37 1.78-2.37.85 0 1.25.62 1.25 1.37 0 .85-.53 2.1-.8 3.27-.24.98.48 1.78 1.44 1.78 1.73 0 2.9-2.24 2.9-4.9 0-2-1.35-3.5-3.82-3.5-2.8 0-4.53 2.07-4.53 4.4 0 .5.1.9.25 1.23l-1.5.82c-.36-.64-.54-1.43-.54-2.28 0-2.6 2.2-5.74 6.57-5.74 3.5 0 5.82 2.54 5.82 5.27 0 3.6-2 6.3-4.96 6.3z" /></svg>
                                </div>Pinterest
                            </div>
                        </a>

                        <!-- Sharingbutton LinkedIn -->
                        @{
                            string llink = "https%3A%2F%2Ftakeabreak.azurewebsites.net%2FProduct%2FRead%2F" + product.Id;
                        }
                        <a class="resp-sharing-button__link" href="https://www.linkedin.com/sharing/share-offsite/?url=@llink&title=Look%2C%20I%20found%20a%20good%20place%20to%20rest%20and%20Take%20a%20Break!!%20Check%20it%20out." target="_blank" rel="noopener" aria-label="LinkedIn">
                            <div class="resp-sharing-button resp-sharing-button--linkedin resp-sharing-button--medium">
                                <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solidcircle">
                                    <svg version="1.1" x="0px" y="0px" width="24px" height="24px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve">
                                    <path d="M12,0C5.383,0,0,5.383,0,12s5.383,12,12,12s12-5.383,12-12S18.617,0,12,0z M9.5,16.5h-2v-7h2V16.5z M8.5,7.5 c-0.553,0-1-0.448-1-1c0-0.552,0.447-1,1-1s1,0.448,1,1C9.5,7.052,9.053,7.5,8.5,7.5z M18.5,16.5h-3V13c0-0.277-0.225-0.5-0.5-0.5 c-0.276,0-0.5,0.223-0.5,0.5v3.5h-3c0,0,0.031-6.478,0-7h3v0.835c0,0,0.457-0.753,1.707-0.753c1.55,0,2.293,1.12,2.293,3.296V16.5z" /></svg>
                                </div>LinkedIn
                            </div>
                        </a>

                        <!-- Sharingbutton WhatsApp -->
                        @{
                            string wlink = "https://api.whatsapp.com/send?text=Look%2C%20I%20found%20a%20good%20place%20to%20rest%20and%20Take%20a%20Break!!%20Check%20it%20out.%20https%3A%2F%2Ftakeabreak.azurewebsites.net%2FProduct%2FRead%2F" + product.Id;
                        }
                        <a class="resp-sharing-button__link" href="@wlink" target="_blank" rel="noopener" aria-label="WhatsApp">
                            <div class="resp-sharing-button resp-sharing-button--whatsapp resp-sharing-button--medium">
                                <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solidcircle">
                                    <svg xmlns="http://www.w3.org/2000/svg" height="24" width="24" viewBox="0 0 24 24"><path d="m12 0c-6.6 0-12 5.4-12 12s5.4 12 12 12 12-5.4 12-12-5.4-12-12-12zm0 3.8c2.2 0 4.2 0.9 5.7 2.4 1.6 1.5 2.4 3.6 2.5 5.7 0 4.5-3.6 8.1-8.1 8.1-1.4 0-2.7-0.4-3.9-1l-4.4 1.1 1.2-4.2c-0.8-1.2-1.1-2.6-1.1-4 0-4.5 3.6-8.1 8.1-8.1zm0.1 1.5c-3.7 0-6.7 3-6.7 6.7 0 1.3 0.3 2.5 1 3.6l0.1 0.3-0.7 2.4 2.5-0.7 0.3 0.099c1 0.7 2.2 1 3.4 1 3.7 0 6.8-3 6.9-6.6 0-1.8-0.7-3.5-2-4.8s-3-2-4.8-2zm-3 2.9h0.4c0.2 0 0.4-0.099 0.5 0.3s0.5 1.5 0.6 1.7 0.1 0.2 0 0.3-0.1 0.2-0.2 0.3l-0.3 0.3c-0.1 0.1-0.2 0.2-0.1 0.4 0.2 0.2 0.6 0.9 1.2 1.4 0.7 0.7 1.4 0.9 1.6 1 0.2 0 0.3 0.001 0.4-0.099s0.5-0.6 0.6-0.8c0.2-0.2 0.3-0.2 0.5-0.1l1.4 0.7c0.2 0.1 0.3 0.2 0.5 0.3 0 0.1 0.1 0.5-0.099 1s-1 0.9-1.4 1c-0.3 0-0.8 0.001-1.3-0.099-0.3-0.1-0.7-0.2-1.2-0.4-2.1-0.9-3.4-3-3.5-3.1s-0.8-1.1-0.8-2.1c0-1 0.5-1.5 0.7-1.7s0.4-0.3 0.5-0.3z" /></svg>
                                </div>WhatsApp
                            </div>
                        </a>

                        <!-- Sharingbutton Telegram -->
                        @{
                            string telegramLink = "https%3A%2F%2Ftakeabreak.azurewebsites.net%2FProduct%2FRead%2F" + product.Id;
                        }
                        <a class="resp-sharing-button__link" href="https://t.me/share/url?url=@telegramLink&text=Look%2C%20I%20found%20a%20good%20place%20to%20rest%20and%20Take%20a%20Break!!%20Check%20it%20out." target="_blank" rel="noopener" aria-label="Telegram">
                            <div class="resp-sharing-button resp-sharing-button--telegram resp-sharing-button--medium">
                                <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solidcircle">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 23.5c6.35 0 11.5-5.15 11.5-11.5S18.35.5 12 .5.5 5.65.5 12 5.65 23.5 12 23.5zM2.505 11.053c-.31.118-.505.738-.505.738s.203.62.513.737l3.636 1.355 1.417 4.557a.787.787 0 0 0 1.25.375l2.115-1.72a.29.29 0 0 1 .353-.01L15.1 19.85a.786.786 0 0 0 .746.095.786.786 0 0 0 .487-.573l2.793-13.426a.787.787 0 0 0-1.054-.893l-15.568 6z" fill-rule="evenodd" /></svg>
                                </div>Telegram
                            </div>
                        </a>
                    </div>

                    <div class="modal-footer">
                        @if (product.Ratings == null || !product.Ratings.Any())
                        {
                            <span>Be the first to vote!</span>
                        }
                        else
                        {
                            <span>@product.Ratings.Count() @(product.Ratings.Count() == 1 ? "Vote" : "Votes")</span>
                        }
                        <!-- Updated the for loop to use product ID -->
                        @for (int i = 1; i <= 5; i++)
                        {
                            var currentStar = i;
                            <span class="fa fa-star @(product.Ratings != null && i <= product.Ratings.Average() ? "checked" : "")" @onclick="(e => SubmitRating(product.Id, currentStar))"></span>
                        }
                    </div>

                </div>
            </div>
        </div>
    }
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@code {
    private IEnumerable<ProductModel> Products => ProductService.GetProducts();
    private string selectedNeighborhood;
    private string selectedLocationType;
    
    private IEnumerable<string> LocationTypes => Products.Select(p => p.LocationType).Distinct();


    // Computed property to get the distinct list of neighborhoods
    private IEnumerable<string> Neighborhoods => Products.Select(p => p.Neighborhood).Distinct();

    // Computed property to get the filtered list of products
    private IEnumerable<ProductModel> FilteredProducts =>
        Products
            .Where(p =>
                (string.IsNullOrWhiteSpace(selectedNeighborhood) || p.Neighborhood.Equals(selectedNeighborhood, StringComparison.OrdinalIgnoreCase)) &&
                (string.IsNullOrWhiteSpace(selectedLocationType) || p.LocationType.Equals(selectedLocationType, StringComparison.OrdinalIgnoreCase))
            );

    // Event callback for when the dropdown value changes
    private void OnNeighborhoodChanged(ChangeEventArgs e)
    {
        selectedNeighborhood = e.Value?.ToString();
        StateHasChanged(); // Trigger a re-render of the component
    }
    
    // Event callback for when the location type dropdown value changes
    private void OnLocationTypeChanged(ChangeEventArgs e)
    {
        selectedLocationType = e.Value?.ToString();
        StateHasChanged(); // Trigger a re-render of the component
    }

    
    void SubmitRating(string productId, int rating)
    {
        System.Console.WriteLine($"Rating received for product {productId}: {rating}");
        ProductService.AddRating(productId, rating);

        // After adding rating, you might want to refresh the product's details
        // You would need to implement logic to refresh product details if necessary
    }
}